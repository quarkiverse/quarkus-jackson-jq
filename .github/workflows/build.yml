name: Build

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
      - '*.md'
      - '*.adoc'
      - '*.txt'
      - '.all-contributorsrc'
  pull_request:
    paths-ignore:
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
      - '*.md'
      - '*.adoc'
      - '*.txt'
      - '.all-contributorsrc'

jobs:
  # ----------------------------------------------------------------------------
  # 1) JVM build + tests under Java 17
  # ----------------------------------------------------------------------------
  build-jvm:
    name: JVM Build & Tests (Java 17)
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v5

      - name: Set up Java 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Maven formatter validate + JVM verify
        run: mvn -B formatter:validate verify --file pom.xml

  # ----------------------------------------------------------------------------
  # 2) Native build + integration‐tests (Java 21 + container)
  # ----------------------------------------------------------------------------
  build-native:
    name: Native Build & Tests (Mandrel JDK 21 in container)
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v5

      - name: Set up Java 21
        uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Maven formatter validate + Native verify
        # This will use <quarkus.native.container-build>true</quarkus.native.container-build>
        # and <quarkus.native.builder-image>…jdk-21</…> as defined in the IT POM,
        # so Quarkus spins up a Mandrel JDK21 container to produce the Linux binary,
        # and then runs the integration tests against that native runner.
        run: mvn -B formatter:validate verify --file pom.xml -Pnative

      - name: Cleanup Native Runner
        if: always()
        run: rm -f target/*-runner
